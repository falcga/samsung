import java.util.Random;

public class BigMonster extends Monster {
    private String image = "üëπ";

    public BigMonster(int sizeBoard, int difficultyLevel) {
        super(sizeBoard, difficultyLevel);
        this.image = "üëπ";
    }

    @Override
    public String getImage() {
        return image;
    }

    @Override
    public boolean monsterHere(Person player, String[][] board) {
        System.out.println("üëπ –í—Å—Ç—Ä–µ—Ç–∏–ª—Å—è –ë–û–õ–¨–®–û–ô –º–æ–Ω—Å—Ç—Ä! –†–µ—à–∏—Ç–µ —Å–ª–æ–∂–Ω—ã–π –ø—Ä–∏–º–µ—Ä!");
        boolean battleResult = handleMonsterBattle(player);

        if (!battleResult) {
            player.decreaseLives();
            System.out.println("üíî –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç! –ü–æ—Ç–µ—Ä—è–Ω–∞ –∂–∏–∑–Ω—å.");
            return false;
        } else {
            System.out.println("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ë–æ–ª—å—à–æ–π –º–æ–Ω—Å—Ç—Ä –ø–æ–±–µ–∂–¥–µ–Ω!");
            board[this.y][this.x] = "  ";
            return true;
        }
    }

    @Override
    protected boolean handleMonsterBattle(Person player) {
        int operation = rnd.nextInt(3);
        int num1, num2;
        int maxNumber = getMaxNumberForDifficulty() * 2;
        num1 = rnd.nextInt(maxNumber) + 1;
        num2 = rnd.nextInt(maxNumber) + 1;

        int correctAnswer;
        String operationSymbol;

        switch (operation) {
            case 0:
                correctAnswer = num1 + num2;
                operationSymbol = "+";
                break;
            case 1:
                correctAnswer = num1 - num2;
                operationSymbol = "-";
                break;
            case 2:
                num1 = rnd.nextInt(20) + 1;
                num2 = rnd.nextInt(10) + 1;
                correctAnswer = num1 * num2;
                operationSymbol = "*";
                break;
            default:
                correctAnswer = num1 + num2;
                operationSymbol = "+";
        }

        System.out.println("–ß–µ–º—É —Ä–∞–≤–Ω–æ " + num1 + " " + operationSymbol + " " + num2 + "?");
        int answer = sc.nextInt();

        return answer == correctAnswer;
    }

    @Override
    protected int getMaxNumberForDifficulty() {
        return super.getMaxNumberForDifficulty() * 2;
    }
}